name "imaging_sonar_simulation"

# include rock drivers
using_library "gpu_sonar_simulation"
using_library "normal_depth_map"
using_library "vizkit3d_world"
using_library "frame_helper"

using_task_library "vizkit3d_world"

import_types_from "base"
import_types_from "imaging_sonar_simulationTypes.hpp"

task_context "Task" do
    abstract
    subclasses "vizkit3d_world::Task"

    # set the sonar pose using a RigidBodyState structure
    input_port("sonar_pose_cmd", "base::samples::RigidBodyState");

    # Range of the sonar in meters (1.0 - 150.0)
    property("range", "double", 50.0).dynamic

    # Gain of the sonar (0.0 - 1.0)
    property("gain", "double", 0.5).dynamic

    # Number of Bins
    property("bin_count", "int", 750).dynamic

    # Opening of the beam orthogonal to the device's Z direction
    property("beam_width", "base/Angle")

    # Opening of the beam along the device's Z direction
    property("beam_height", "base/Angle")

    # Enable underwater signal attenuation effect
    property("enable_attenuation", "bool", false).dynamic

    # Enable speckle noise in acoustic image
    property("enable_speckle_noise", "bool", true).dynamic

    # Write shader image
    property("write_shader_image", "bool", false).dynamic

    # Underwater acoustic attenuation properties (water temperature and sonar frequency)
    property("attenuation_properties", "imaging_sonar_simulation/AcousticAttenuationProperties").dynamic

    # Output sonar data (Sonar)
    output_port("sonar_samples", "base::samples::Sonar");

    # Shader Image
    output_port("shader_image", ro_ptr("/base/samples/frame/Frame"));

    port_driven
end

task_context "ScanningSonarTask" do

    subclasses "imaging_sonar_simulation::Task"

    # Left limit angle
    property("left_limit", "base/Angle").dynamic

    # Right limit angle
    property("right_limit", "base/Angle").dynamic

    # Step angle size
    property("motor_step", "base/Angle").dynamic

    # Enable/disable ping pong scanning mode
    property("continuous", "bool", true).dynamic

    periodic 0.05
end

task_context "MultibeamSonarTask" do

    subclasses "imaging_sonar_simulation::Task"

    # Number of Beams
    property("beam_count", "int", 256).dynamic
end
